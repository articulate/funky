{
  "name": "@articulate/funky",
  "version": "1.9.1",
  "description": "Functional helper library",
  "main": "index.js",
  "types": "index.d.ts",
  "exports": {
    ".": {
      "require": "./index.js",
      "types": "./index.d.ts"
    },
    "./lib/all": {
      "require": "./lib/all.js",
      "types": "./types/all.d.ts"
    },
    "./lib/assemble": {
      "require": "./lib/assemble.js",
      "types": "./types/assemble.d.ts"
    },
    "./lib/assembleP": {
      "require": "./lib/assembleP.js",
      "types": "./types/assembleP.d.ts"
    },
    "./lib/assocWith": {
      "require": "./lib/assocWith.js",
      "types": "./types/assocWith.d.ts"
    },
    "./lib/assocWithP": {
      "require": "./lib/assocWithP.js",
      "types": "./types/assocWithP.d.ts"
    },
    "./lib/backoff": {
      "require": "./lib/backoff.js",
      "types": "./types/backoff.d.ts"
    },
    "./lib/batch": {
      "require": "./lib/batch.js",
      "types": "./types/batch.d.ts"
    },
    "./lib/combine": {
      "require": "./lib/combine.js",
      "types": "./types/combine.d.ts"
    },
    "./lib/combineAll": {
      "require": "./lib/combineAll.js",
      "types": "./types/combineAll.d.ts"
    },
    "./lib/combineAllP": {
      "require": "./lib/combineAllP.js",
      "types": "./types/combineAllP.d.ts"
    },
    "./lib/combineP": {
      "require": "./lib/combineP.js",
      "types": "./types/combineP.d.ts"
    },
    "./lib/combineWith": {
      "require": "./lib/combineWith.js",
      "types": "./types/combineWith.d.ts"
    },
    "./lib/combineWithP": {
      "require": "./lib/combineWithP.js",
      "types": "./types/combineWithP.d.ts"
    },
    "./lib/convergeP": {
      "require": "./lib/convergeP.js",
      "types": "./types/convergeP.d.ts"
    },
    "./lib/copyPath": {
      "require": "./lib/copyPath.js",
      "types": "./types/copyPath.d.ts"
    },
    "./lib/copyProp": {
      "require": "./lib/copyProp.js",
      "types": "./types/copyProp.d.ts"
    },
    "./lib/evolveP": {
      "require": "./lib/evolveP.js",
      "types": "./types/evolveP.d.ts"
    },
    "./lib/juxtP": {
      "require": "./lib/juxtP.js",
      "types": "./types/juxtP.d.ts"
    },
    "./lib/mapP": {
      "require": "./lib/mapP.js",
      "types": "./types/mapP.d.ts"
    },
    "./lib/move": {
      "require": "./lib/move.js",
      "types": "./types/move.d.ts"
    },
    "./lib/normalizeBy": {
      "require": "./lib/normalizeBy.js",
      "types": "./types/normalizeBy.d.ts"
    },
    "./lib/onSuccess": {
      "require": "./lib/onSuccess.js",
      "types": "./types/onSuccess.d.ts"
    },
    "./lib/onSuccessP": {
      "require": "./lib/onSuccessP.js",
      "types": "./types/onSuccessP.d.ts"
    },
    "./lib/overP": {
      "require": "./lib/overP.js",
      "types": "./types/overP.d.ts"
    },
    "./lib/promisify": {
      "require": "./lib/promisify.js",
      "types": "./types/promisify.d.ts"
    },
    "./lib/reject": {
      "require": "./lib/reject.js",
      "types": "./types/reject.d.ts"
    },
    "./lib/rename": {
      "require": "./lib/rename.js",
      "types": "./types/rename.d.ts"
    },
    "./lib/renameAll": {
      "require": "./lib/renameAll.js",
      "types": "./types/renameAll.d.ts"
    },
    "./lib/renamePath": {
      "require": "./lib/renamePath.js",
      "types": "./types/renamePath.d.ts"
    },
    "./lib/renamePick": {
      "require": "./lib/renamePick.js",
      "types": "./types/renamePick.d.ts"
    },
    "./lib/resolve": {
      "require": "./lib/resolve.js",
      "types": "./types/resolve.d.ts"
    },
    "./lib/tapP": {
      "require": "./lib/tapP.js",
      "types": "./types/tapP.d.ts"
    },
    "./lib/unlessP": {
      "require": "./lib/unlessP.js",
      "types": "./types/unlessP.d.ts"
    },
    "./lib/useWithP": {
      "require": "./lib/useWithP.js",
      "types": "./types/useWithP.d.ts"
    },
    "./lib/validate": {
      "require": "./lib/validate.js",
      "types": "./types/validate.d.ts"
    },
    "./lib/validateWith": {
      "require": "./lib/validateWith.js",
      "types": "./types/validateWith.d.ts"
    },
    "./lib/whenP": {
      "require": "./lib/whenP.js",
      "types": "./types/whenP.d.ts"
    }
  },
  "repository": "git@github.com:articulate/funky.git",
  "author": "articulate",
  "license": "MIT",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "statements": 100,
    "functions": 100,
    "branches": 100
  },
  "scripts": {
    "build": "buble -i src -o lib",
    "clean": "rm -rf lib && mkdir -p lib",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "lint": "eslint src test",
    "postversion": "git push --tags origin master",
    "prebuild": "yarn run clean",
    "pretest": "yarn run build",
    "preversion": "git checkout master && yarn run build",
    "test": "mocha test --reporter=dot && yarn run tsd",
    "test:ci": "yarn run lint && yarn run test:coverage && yarn run coverage && yarn run tsd",
    "test:coverage": "nyc yarn run test",
    "test:tsd": "tsd"
  },
  "dependencies": {
    "ramda": "^0.25.0",
    "ts-toolbelt": "^9.6.0",
    "type-fest": "^4.9.0"
  },
  "devDependencies": {
    "@articulate/spy": "^0.0.1",
    "@types/hapi__joi": "^17.1.14",
    "@types/ramda": "~0.25.0",
    "buble": "^0.15.2",
    "chai": "^4.1.1",
    "coveralls": "^2.13.1",
    "eslint": "^4.3.0",
    "joi": "^10.0",
    "mocha": "^3.5.0",
    "nyc": "^11.1.0",
    "prop-factory": "^1.0.0",
    "proxyquire": "^2.0.1",
    "ts-arithmetic": "^0.1.1",
    "tsd": "^0.29.0"
  },
  "peerDependencies": {
    "@types/hapi__joi": ">=10",
    "joi": ">=10"
  }
}
